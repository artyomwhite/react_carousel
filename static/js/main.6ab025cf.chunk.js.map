{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentIdx","handleButtonClick","step","props","images","frameSize","lastIdx","length","newIdx","setState","this","itemWidth","animationDuration","infinite","className","style","width","transition","map","image","index","transform","src","alt","String","type","disabled","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","React","Component","App","handleChange","event","target","id","value","checked","prevState","htmlFor","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ab025cf.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  currentIdx: number;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    currentIdx: 0,\n  };\n\n  handleButtonClick = (step: number) => {\n    const { images, frameSize } = this.props;\n    const { currentIdx } = this.state;\n    const initialIdx = 0;\n    const lastIdx = images.length - frameSize;\n\n    let newIdx = currentIdx + step;\n\n    if (step < 0) {\n      if (currentIdx === initialIdx) {\n        newIdx = lastIdx;\n      } else if (newIdx < initialIdx) {\n        newIdx = initialIdx;\n      }\n    }\n\n    if (step > 0) {\n      if (currentIdx === lastIdx) {\n        newIdx = initialIdx;\n      } else if (newIdx > lastIdx) {\n        newIdx = lastIdx;\n      }\n    }\n\n    this.setState({ currentIdx: newIdx });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n    const { currentIdx } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            transition: `width ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n              style={{\n                transform: `translateX(${-currentIdx * itemWidth}px)`,\n                transition: `transform ${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={String(index + 1)}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons-container\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={!currentIdx && !infinite}\n            onClick={() => this.handleButtonClick(-step)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M15 18l-6-6 6-6\" />\n            </svg>\n          </button>\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            data-cy=\"next\"\n            disabled={currentIdx >= images.length - frameSize && !infinite}\n            onClick={() => this.handleButtonClick(step)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M9 18l6-6-6-6\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ntype State = {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      id,\n      type,\n      value,\n      checked,\n    } = event.target;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [id]: type === 'checkbox' ? checked : +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"App__inputs-container\">\n          <label htmlFor=\"itemWidth\" className=\"App__label\">\n            Item width:\n            <input\n              id=\"itemWidth\"\n              type=\"number\"\n              className=\"App__input\"\n              value={itemWidth}\n              step={10}\n              min={100}\n              max={250}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"frameSize\" className=\"App__label\">\n            Frame size:\n            <input\n              id=\"frameSize\"\n              type=\"number\"\n              className=\"App__input\"\n              value={frameSize}\n              min={1}\n              max={10}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"step\" className=\"App__label\">\n            Step:\n            <input\n              id=\"step\"\n              type=\"number\"\n              className=\"App__input\"\n              value={step}\n              min={1}\n              max={10}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\" className=\"App__label\">\n            Animation duration:\n            <input\n              id=\"animationDuration\"\n              type=\"number\"\n              className=\"App__input\"\n              value={animationDuration}\n              step={10}\n              min={0}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"infinite\" className=\"App__label\">\n            Infinite:\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              className=\"App__input\"\n              checked={infinite}\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}